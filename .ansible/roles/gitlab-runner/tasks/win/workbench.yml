- name: Stop service before deploy workbench
  win_shell: |
    ./gitlab-runner stop
  args:
    chdir: "{{ ansible_env.USERPROFILE }}/.gitlab-runner"
    executable: powershell
  ignore_errors: yes

- name: Remove previous generated workbench
  win_file:
    path: "{{ ansible_env.USERPROFILE }}/.epm/.workbench/{{item['workbench']}}"
    state: absent
  with_list: "{{runners}}"
  when: item['kind'] != 'gitlab-ci.config.generator'

- name: Copy mirror.yml
  win_get_url:
    url: "{{mirror_repository_url}}/mirror.yml"
    dest: "{{ ansible_env.USERPROFILE }}/.epm/mirror.yml"
  when: 
  - mirror_repository_url is defined

- name: Create workbench folders (windows)
  win_file:
    path: "{{ ansible_env.USERPROFILE }}/.epm/.workbench/{{item['workbench']}}/{{item['kind']}}/{{item['id']}}"
    state: directory
    recurse: yes
  with_list: "{{runners}}"
  when: item['kind'] != 'gitlab-ci.config.generator'

- name: copy workbench config file (windows) 
  template:
    src: workbench/config.yml.j2
    dest: "{{ ansible_env.USERPROFILE }}/.epm/.workbench/{{item['workbench']}}/{{item['kind']}}/{{item['id']}}/config.yml"
  with_list: "{{runners}}"
  when: item['kind'] != 'gitlab-ci.config.generator'

- name: Initialize workbench (windows)
  win_shell: |
    $kind="{{item['kind']}}"
    $WD="{{ ansible_env.USERPROFILE }}\.epm\.workbench\{{item['workbench']}}\{{item['kind']}}\{{item['id']}}"
    echo $WD
    python -m venv $WD\venv
    .$WD\venv\Script\Activate.ps1
    pip config set global.index-url http://172.16.0.121:8040/repository/pypi/simple
    pip config set install.trusted-host 172.16.0.121
    pip install --upgrade pip
    pip install {{gitlab_runner.epm}}

    $env:CONAN_USER_HOME="$WD"
    $env:CONAN_REVISIONS_ENABLED="1"
    conan remote clean
    conan remote add {{conan_remote_name}} {{conan_remote_url}} False
    if( $kind -eq "deployer") {
      conan user -p {{conan_remote_username}} -r {{conan_remote_name}} {{conan_remote_username}}
    }
  with_list: "{{runners}}"
  when: 
  - item['kind'] != 'gitlab-ci.config.generator'

- name: Startup service
  win_shell: |
    ./gitlab-runner start
  args:
    chdir: "{{ ansible_env.USERPROFILE }}/.gitlab-runner"
    executable: powershell
