stages:
- build
- test
- deploy

    # =================================
    # MSVC build
    # =================================
expat:MSVC@build:
  stage: build
  tags:
  - Windows
  - builder
  - workbench:oss-0.2
  artifacts:
    paths:
    - expat/.conan/$EPM_PROFILE/$EPM_SCHEME
    - expat/.epm
  script:
  - cd expat
  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME
  parallel:
    matrix:
    - EPM_PROFILE: ['vs2019', 'vs2019d']
      EPM_SCHEME: ['static', 'shared']

    # =========================================
    # gcc5-armv8 armv8 build
    # =========================================
expat:gcc5-armv8@build:
  stage: build
  tags:
  - Linux
  - builder
  - docker
  - workbench:oss-0.2
  image: 172.16.0.119:8482/edgetoolkit/gcc5-armv8
  artifacts:
    paths:
    - expat/.conan/$EPM_PROFILE/$EPM_SCHEME
    - expat/.epm
  script:
  - cd expat
  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME
  parallel:
    matrix:
    - EPM_PROFILE: ['gcc5-armv8d', 'gcc5-armv8']
      EPM_SCHEME: ['static', 'shared']

    # =========================================
    # gcc5 x86_64 build
    # =========================================
expat:gcc5@build:
  stage: build
  tags:
  - Linux
  - builder
  - docker
  - workbench:oss-0.2
  image: 172.16.0.119:8482/edgetoolkit/gcc5
  artifacts:
    paths:
    - expat/.conan/$EPM_PROFILE/$EPM_SCHEME
    - expat/.epm
  script:
  - cd expat
  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME
  parallel:
    matrix:
    - EPM_PROFILE: ['gcc5', 'gcc5d']
      EPM_SCHEME: ['static', 'shared']

    # =========================================
    # gcc5-armv7 armv7 build
    # =========================================
expat:gcc5-armv7@build:
  stage: build
  tags:
  - Linux
  - builder
  - docker
  - workbench:oss-0.2
  image: 172.16.0.119:8482/edgetoolkit/gcc5-armv7
  artifacts:
    paths:
    - expat/.conan/$EPM_PROFILE/$EPM_SCHEME
    - expat/.epm
  script:
  - cd expat
  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME
  parallel:
    matrix:
    - EPM_PROFILE: ['gcc5-armv7', 'gcc5-armv7d']
      EPM_SCHEME: ['static', 'shared']

    # =================================
    # MSVC test
    # =================================
expat:MSVC@test:
  stage: test
  tags:
  - Windows
  - runner
  - workbench:oss-0.2
  dependencies:
  - expat:MSVC@build
  script: |
    cd expat
    $EPM_SANDBOX_STORAGE = ".conan/$EPM_PROFILE/$EPM_SCHEME" 
        
    .epm/$EPM_PROFILE@$EPM_SCHEME/sandbox/test_package
    
  parallel:
    matrix:
    - EPM_PROFILE: ['vs2019', 'vs2019d']
      EPM_SCHEME: ['static', 'shared']




    # =========================================
    # gcc5 x86_64 test
    # =========================================
expat:gcc5@test:
  stage: test
  tags:
  - Linux
  - runner
  - docker
  - workbench:oss-0.2
  image: edgetoolkit/ubuntu:xenial
  dependencies:
  - expat:gcc5@build
  script:
    cd expat
    export EPM_SANDBOX_STORAGE = ".conan/$EPM_PROFILE/$EPM_SCHEME"    
        
    .epm/$EPM_PROFILE@$EPM_SCHEME/sandbox/test_package
    
    
  parallel:
    matrix:
    - EPM_PROFILE: ['gcc5', 'gcc5d']
      EPM_SCHEME: ['static', 'shared']



    # =================================
    # Deploy to conan repo
    # =================================
expat@deploy:
  stage: deploy
  tags:
  - conan
  - deployer
  - workbench:oss-0.2
  dependencies:
  - expat:gcc5-armv8@build
  - expat:gcc5@build
  - expat:gcc5-armv7@build
  - expat:MSVC@build
  script: |
    set -e
    cd expat
    PROFILES=(
      gcc5-armv8d gcc5-armv8
      gcc5 gcc5d
      gcc5-armv7 gcc5-armv7d
      vs2019 vs2019d
    )

    for profile in ${PROFILES[*]}
    do
      for scheme in static shared
      do
        export EPM_PROFILE=$profile
        export EPM_FPROFILE=$scheme
        echo [expat] - Upload...  $profile $shcme
        epm upload --storage .conan/$profile/$scheme
      done
    done 