stages:
- build
- test
- deploy

    # =================================
    # MSVC build
    # =================================
zlib:MSVC@build:
  stage: build
  tags:
  - Windows
  - builder
  - workbench:Z1
  artifacts:
    paths:
    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
    - zlib/_out
  script:
  - cd zlib
  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME  --with-deps --clear
  parallel:
    matrix:
    - EPM_PROFILE: ['vs2019']
      EPM_SCHEME: ['shared']
#
#    # =========================================
#    # gcc5 x86_64 build
#    # =========================================
#zlib:gcc5@build:
#  stage: build
#  tags:
#  - Linux
#  - builder
#  - docker
#  - workbench:Z1
#  image: edgetoolkit/gcc5
#  artifacts:
#    paths:
#    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
#    - zlib/_out
#  script:
#  - cd zlib
#  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME --with-deps --clear
#  parallel:
#    matrix:
#    - EPM_PROFILE: ['gcc5d', 'gcc5']
#      EPM_SCHEME: ['shared', 'static']
#
#    # =========================================
#    # gcc5-armv8 armv8 build
#    # =========================================
#zlib:gcc5-armv8@build:
#  stage: build
#  tags:
#  - Linux
#  - builder
#  - docker
#  - workbench:Z1
#  image: edgetoolkit/gcc5-armv8
#  artifacts:
#    paths:
#    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
#    - zlib/_out
#  script:
#  - cd zlib
#  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME --with-deps --clear
#  parallel:
#    matrix:
#    - EPM_PROFILE: ['gcc5-armv8d', 'gcc5-armv8']
#      EPM_SCHEME: ['shared', 'static']
#
#    # =========================================
#    # gcc5-armv7 armv7 build
#    # =========================================
#zlib:gcc5-armv7@build:
#  stage: build
#  tags:
#  - Linux
#  - builder
#  - docker
#  - workbench:Z1
#  image: edgetoolkit/gcc5-armv7
#  artifacts:
#    paths:
#    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
#    - zlib/_out
#  script:
#  - cd zlib
#  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME --with-deps --clear
#  parallel:
#    matrix:
#    - EPM_PROFILE: ['gcc5-armv7', 'gcc5-armv7d']
#      EPM_SCHEME: ['shared', 'static']
#
#    # =========================================
#    # gcc6 x86_64 build
#    # =========================================
#zlib:gcc6@build:
#  stage: build
#  tags:
#  - Linux
#  - builder
#  - docker
#  - workbench:Z1
#  image: edgetoolkit/gcc6
#  artifacts:
#    paths:
#    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
#    - zlib/_out
#  script:
#  - cd zlib
#  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME --with-deps --clear
#  parallel:
#    matrix:
#    - EPM_PROFILE: ['gcc6d', 'gcc6']
#      EPM_SCHEME: ['shared', 'static']
#
#    # =========================================
#    # gcc7-armv8 armv8 build
#    # =========================================
#zlib:gcc7-armv8@build:
#  stage: build
#  tags:
#  - Linux
#  - builder
#  - docker
#  - workbench:Z1
#  image: edgetoolkit/gcc7-armv8
#  artifacts:
#    paths:
#    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
#    - zlib/_out
#  script:
#  - cd zlib
#  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME --with-deps --clear
#  parallel:
#    matrix:
#    - EPM_PROFILE: ['gcc7-armv8d', 'gcc7-armv8']
#      EPM_SCHEME: ['shared', 'static']
#
#    # =========================================
#    # gcc6-armv8 armv8 build
#    # =========================================
#zlib:gcc6-armv8@build:
#  stage: build
#  tags:
#  - Linux
#  - builder
#  - docker
#  - workbench:Z1
#  image: edgetoolkit/gcc6-armv8
#  artifacts:
#    paths:
#    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
#    - zlib/_out
#  script:
#  - cd zlib
#  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME --with-deps --clear
#  parallel:
#    matrix:
#    - EPM_PROFILE: ['gcc6-armv8d', 'gcc6-armv8']
#      EPM_SCHEME: ['shared', 'static']
#
#    # =========================================
#    # gcc7-armv7 armv7 build
#    # =========================================
#zlib:gcc7-armv7@build:
#  stage: build
#  tags:
#  - Linux
#  - builder
#  - docker
#  - workbench:Z1
#  image: edgetoolkit/gcc7-armv7
#  artifacts:
#    paths:
#    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
#    - zlib/_out
#  script:
#  - cd zlib
#  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME --with-deps --clear
#  parallel:
#    matrix:
#    - EPM_PROFILE: ['gcc7-armv7d', 'gcc7-armv7']
#      EPM_SCHEME: ['shared', 'static']
#
#    # =========================================
#    # gcc7 x86_64 build
#    # =========================================
#zlib:gcc7@build:
#  stage: build
#  tags:
#  - Linux
#  - builder
#  - docker
#  - workbench:Z1
#  image: edgetoolkit/gcc7
#  artifacts:
#    paths:
#    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
#    - zlib/_out
#  script:
#  - cd zlib
#  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME --with-deps --clear
#  parallel:
#    matrix:
#    - EPM_PROFILE: ['gcc7d', 'gcc7']
#      EPM_SCHEME: ['shared', 'static']
#
#    # =========================================
#    # gcc8 x86_64 build
#    # =========================================
#zlib:gcc8@build:
#  stage: build
#  tags:
#  - Linux
#  - builder
#  - docker
#  - workbench:Z1
#  image: edgetoolkit/gcc8
#  artifacts:
#    paths:
#    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
#    - zlib/_out
#  script:
#  - cd zlib
#  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME --with-deps --clear
#  parallel:
#    matrix:
#    - EPM_PROFILE: ['gcc8', 'gcc8d']
#      EPM_SCHEME: ['shared', 'static']
#
#    # =========================================
#    # gcc6-armv7 armv7 build
#    # =========================================
#zlib:gcc6-armv7@build:
#  stage: build
#  tags:
#  - Linux
#  - builder
#  - docker
#  - workbench:Z1
#  image: edgetoolkit/gcc6-armv7
#  artifacts:
#    paths:
#    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
#    - zlib/_out
#  script:
#  - cd zlib
#  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME --with-deps --clear
#  parallel:
#    matrix:
#    - EPM_PROFILE: ['gcc6-armv7', 'gcc6-armv7d']
#      EPM_SCHEME: ['shared', 'static']
#
    # =================================
    # MSVC test
    # =================================
zlib:MSVC@test:
  stage: test
  tags:
  - Windows
  - runner
  - workbench:Z1
  dependencies:
  - zlib:MSVC@build
  script:
  - cd zlib
  - $env:EPM_SANDBOX_STORAGE = ".conan/$EPM_PROFILE/$EPM_SCHEME" 
  - . _out/$EPM_PROFILE/$EPM_SCHEME/sandbox/test_package 
  
  
  parallel:
    matrix:
    - EPM_PROFILE: ['vs2019']
      EPM_SCHEME: ['shared']
#    - EPM_PROFILE: ['vs2019d', 'vs2019']
#      EPM_SCHEME: ['shared', 'static']
#
#
#
#    # =========================================
#    # gcc5 x86_64 test
#    # =========================================   
#zlib:gcc5@test:
#  stage: test
#  tags:
#  - Linux
#  - runner
#  - docker
#  - workbench:Z1
#  image: ubuntu:xenial
#  dependencies:
#  - zlib:gcc5@build
#  script:
#  - cd zlib
#  - export EPM_SANDBOX_STORAGE=".conan/$EPM_PROFILE/$EPM_SCHEME"    
#        
#  - _out/$EPM_PROFILE/$EPM_SCHEME/sandbox/test_package
#    
#  parallel:
#    matrix:
#    - EPM_PROFILE: ['gcc5d', 'gcc5']
#      EPM_SCHEME: ['shared', 'static']
#
#
#
#    # =========================================
#    # gcc5-armv8 armv8 test
#    # =========================================   
#zlib:gcc5-armv8@test:
#  stage: test
#  tags:
#  - Linux/aarch64
#  - runner
#  - docker
#  - workbench:Z1
#  image: arm64v8/ubuntu:xenial
#  dependencies:
#  - zlib:gcc5-armv8@build
#  script:
#  - cd zlib
#  - export EPM_SANDBOX_STORAGE=".conan/$EPM_PROFILE/$EPM_SCHEME"    
#        
#  - _out/$EPM_PROFILE/$EPM_SCHEME/sandbox/test_package
#    
#  parallel:
#    matrix:
#    - EPM_PROFILE: ['gcc5-armv8d', 'gcc5-armv8']
#      EPM_SCHEME: ['shared', 'static']
#
#
#
#
#
#
#    # =========================================
#    # gcc6 x86_64 test
#    # =========================================   
#zlib:gcc6@test:
#  stage: test
#  tags:
#  - Linux
#  - runner
#  - docker
#  - workbench:Z1
#  image: ubuntu:bionic
#  dependencies:
#  - zlib:gcc6@build
#  script:
#  - cd zlib
#  - export EPM_SANDBOX_STORAGE=".conan/$EPM_PROFILE/$EPM_SCHEME"    
#        
#  - _out/$EPM_PROFILE/$EPM_SCHEME/sandbox/test_package
#    
#  parallel:
#    matrix:
#    - EPM_PROFILE: ['gcc6d', 'gcc6']
#      EPM_SCHEME: ['shared', 'static']
#
#
#
#    # =========================================
#    # gcc7-armv8 armv8 test
#    # =========================================   
#zlib:gcc7-armv8@test:
#  stage: test
#  tags:
#  - Linux/aarch64
#  - runner
#  - docker
#  - workbench:Z1
#  image: arm64v8/ubuntu:bionic
#  dependencies:
#  - zlib:gcc7-armv8@build
#  script:
#  - cd zlib
#  - export EPM_SANDBOX_STORAGE=".conan/$EPM_PROFILE/$EPM_SCHEME"    
#        
#  - _out/$EPM_PROFILE/$EPM_SCHEME/sandbox/test_package
#    
#  parallel:
#    matrix:
#    - EPM_PROFILE: ['gcc7-armv8d', 'gcc7-armv8']
#      EPM_SCHEME: ['shared', 'static']
#
#
#
#    # =========================================
#    # gcc6-armv8 armv8 test
#    # =========================================   
#zlib:gcc6-armv8@test:
#  stage: test
#  tags:
#  - Linux/aarch64
#  - runner
#  - docker
#  - workbench:Z1
#  image: arm64v8/ubuntu:bionic
#  dependencies:
#  - zlib:gcc6-armv8@build
#  script:
#  - cd zlib
#  - export EPM_SANDBOX_STORAGE=".conan/$EPM_PROFILE/$EPM_SCHEME"    
#        
#  - _out/$EPM_PROFILE/$EPM_SCHEME/sandbox/test_package
#    
#  parallel:
#    matrix:
#    - EPM_PROFILE: ['gcc6-armv8d', 'gcc6-armv8']
#      EPM_SCHEME: ['shared', 'static']
#
#
#
#
#
#
#    # =========================================
#    # gcc7 x86_64 test
#    # =========================================   
#zlib:gcc7@test:
#  stage: test
#  tags:
#  - Linux
#  - runner
#  - docker
#  - workbench:Z1
#  image: ubuntu:bionic
#  dependencies:
#  - zlib:gcc7@build
#  script:
#  - cd zlib
#  - export EPM_SANDBOX_STORAGE=".conan/$EPM_PROFILE/$EPM_SCHEME"    
#        
#  - _out/$EPM_PROFILE/$EPM_SCHEME/sandbox/test_package
#    
#  parallel:
#    matrix:
#    - EPM_PROFILE: ['gcc7d', 'gcc7']
#      EPM_SCHEME: ['shared', 'static']
#
#
#
#    # =========================================
#    # gcc8 x86_64 test
#    # =========================================   
#zlib:gcc8@test:
#  stage: test
#  tags:
#  - Linux
#  - runner
#  - docker
#  - workbench:Z1
#  image: ubuntu:bionic
#  dependencies:
#  - zlib:gcc8@build
#  script:
#  - cd zlib
#  - export EPM_SANDBOX_STORAGE=".conan/$EPM_PROFILE/$EPM_SCHEME"    
#        
#  - _out/$EPM_PROFILE/$EPM_SCHEME/sandbox/test_package
#    
#  parallel:
#    matrix:
#    - EPM_PROFILE: ['gcc8', 'gcc8d']
#      EPM_SCHEME: ['shared', 'static']
#
#
#
#
#    # =================================
#    # Deploy to conan repo
#    # =================================
#zlib@deploy:
#  stage: deploy
#  tags:
#  - conan
#  - deployer
#  - workbench:Z1
#
#  dependencies:
#  - zlib:gcc5@build
#  - zlib:gcc5-armv8@build
#  - zlib:gcc5-armv7@build
#  - zlib:gcc6@build
#  - zlib:gcc7-armv8@build
#  - zlib:gcc6-armv8@build
#  - zlib:gcc7-armv7@build
#  - zlib:gcc7@build
#  - zlib:gcc8@build
#  - zlib:MSVC@build
#  - zlib:gcc6-armv7@build
#  script:
#  - cd zlib
#  - epm -p gcc5d -s shared upload --storage .conan/gcc5d/shared
#  - epm -p gcc5d -s static upload --storage .conan/gcc5d/static
#  - epm -p gcc5 -s shared upload --storage .conan/gcc5/shared
#  - epm -p gcc5 -s static upload --storage .conan/gcc5/static
#  - epm -p gcc5-armv8d -s shared upload --storage .conan/gcc5-armv8d/shared
#  - epm -p gcc5-armv8d -s static upload --storage .conan/gcc5-armv8d/static
#  - epm -p gcc5-armv8 -s shared upload --storage .conan/gcc5-armv8/shared
#  - epm -p gcc5-armv8 -s static upload --storage .conan/gcc5-armv8/static
#  - epm -p gcc5-armv7 -s shared upload --storage .conan/gcc5-armv7/shared
#  - epm -p gcc5-armv7 -s static upload --storage .conan/gcc5-armv7/static
#  - epm -p gcc5-armv7d -s shared upload --storage .conan/gcc5-armv7d/shared
#  - epm -p gcc5-armv7d -s static upload --storage .conan/gcc5-armv7d/static
#  - epm -p gcc6d -s shared upload --storage .conan/gcc6d/shared
#  - epm -p gcc6d -s static upload --storage .conan/gcc6d/static
#  - epm -p gcc6 -s shared upload --storage .conan/gcc6/shared
#  - epm -p gcc6 -s static upload --storage .conan/gcc6/static
#  - epm -p gcc7-armv8d -s shared upload --storage .conan/gcc7-armv8d/shared
#  - epm -p gcc7-armv8d -s static upload --storage .conan/gcc7-armv8d/static
#  - epm -p gcc7-armv8 -s shared upload --storage .conan/gcc7-armv8/shared
#  - epm -p gcc7-armv8 -s static upload --storage .conan/gcc7-armv8/static
#  - epm -p gcc6-armv8d -s shared upload --storage .conan/gcc6-armv8d/shared
#  - epm -p gcc6-armv8d -s static upload --storage .conan/gcc6-armv8d/static
#  - epm -p gcc6-armv8 -s shared upload --storage .conan/gcc6-armv8/shared
#  - epm -p gcc6-armv8 -s static upload --storage .conan/gcc6-armv8/static
#  - epm -p gcc7-armv7d -s shared upload --storage .conan/gcc7-armv7d/shared
#  - epm -p gcc7-armv7d -s static upload --storage .conan/gcc7-armv7d/static
#  - epm -p gcc7-armv7 -s shared upload --storage .conan/gcc7-armv7/shared
#  - epm -p gcc7-armv7 -s static upload --storage .conan/gcc7-armv7/static
#  - epm -p gcc7d -s shared upload --storage .conan/gcc7d/shared
#  - epm -p gcc7d -s static upload --storage .conan/gcc7d/static
#  - epm -p gcc7 -s shared upload --storage .conan/gcc7/shared
#  - epm -p gcc7 -s static upload --storage .conan/gcc7/static
#  - epm -p gcc8 -s shared upload --storage .conan/gcc8/shared
#  - epm -p gcc8 -s static upload --storage .conan/gcc8/static
#  - epm -p gcc8d -s shared upload --storage .conan/gcc8d/shared
#  - epm -p gcc8d -s static upload --storage .conan/gcc8d/static
#  - epm -p vs2019d -s shared upload --storage .conan/vs2019d/shared
#  - epm -p vs2019d -s static upload --storage .conan/vs2019d/static
#  - epm -p vs2019 -s shared upload --storage .conan/vs2019/shared
#  - epm -p vs2019 -s static upload --storage .conan/vs2019/static
#  - epm -p gcc6-armv7 -s shared upload --storage .conan/gcc6-armv7/shared
#  - epm -p gcc6-armv7 -s static upload --storage .conan/gcc6-armv7/static
#  - epm -p gcc6-armv7d -s shared upload --storage .conan/gcc6-armv7d/shared
#  - epm -p gcc6-armv7d -s static upload --storage .conan/gcc6-armv7d/static