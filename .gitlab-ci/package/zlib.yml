stages:
- build
- test
- deploy

    # =================================
    # MSVC build
    # =================================
zlib:MSVC@build:
  stage: build
  tags:
  - Windows
  - builder
  - workbench:oss-0.2
  artifacts:
    paths:
    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
    - zlib/.epm
  script:
  - cd zlib
  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME
  parallel:
    matrix:
    - EPM_PROFILE: ['vs2019d', 'vs2019']
      EPM_SCHEME: ['shared', 'static']

    # =========================================
    # gcc6-armv8 armv8 build
    # =========================================
zlib:gcc6-armv8@build:
  stage: build
  tags:
  - Linux
  - builder
  - docker
  - workbench:oss-0.2
  image: 172.16.0.119:8482/edgetoolkit/gcc6-armv8
  artifacts:
    paths:
    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
    - zlib/.epm
  script:
  - cd zlib
  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME
  parallel:
    matrix:
    - EPM_PROFILE: ['gcc6-armv8']
      EPM_SCHEME: ['shared', 'static']

    # =========================================
    # gcc6 x86_64 build
    # =========================================
zlib:gcc6@build:
  stage: build
  tags:
  - Linux
  - builder
  - docker
  - workbench:oss-0.2
  image: 172.16.0.119:8482/edgetoolkit/gcc6
  artifacts:
    paths:
    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
    - zlib/.epm
  script:
  - cd zlib
  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME
  parallel:
    matrix:
    - EPM_PROFILE: ['gcc6d', 'gcc6']
      EPM_SCHEME: ['shared', 'static']

    # =========================================
    # gcc7 x86_64 build
    # =========================================
zlib:gcc7@build:
  stage: build
  tags:
  - Linux
  - builder
  - docker
  - workbench:oss-0.2
  image: 172.16.0.119:8482/edgetoolkit/gcc7
  artifacts:
    paths:
    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
    - zlib/.epm
  script:
  - cd zlib
  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME
  parallel:
    matrix:
    - EPM_PROFILE: ['gcc7d', 'gcc7']
      EPM_SCHEME: ['shared', 'static']

    # =========================================
    # gcc5 x86_64 build
    # =========================================
zlib:gcc5@build:
  stage: build
  tags:
  - Linux
  - builder
  - docker
  - workbench:oss-0.2
  image: 172.16.0.119:8482/edgetoolkit/gcc5
  artifacts:
    paths:
    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
    - zlib/.epm
  script:
  - cd zlib
  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME
  parallel:
    matrix:
    - EPM_PROFILE: ['gcc5', 'gcc5d']
      EPM_SCHEME: ['shared', 'static']

    # =========================================
    # gcc5-armv8 armv8 build
    # =========================================
zlib:gcc5-armv8@build:
  stage: build
  tags:
  - Linux
  - builder
  - docker
  - workbench:oss-0.2
  image: 172.16.0.119:8482/edgetoolkit/gcc5-armv8
  artifacts:
    paths:
    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
    - zlib/.epm
  script:
  - cd zlib
  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME
  parallel:
    matrix:
    - EPM_PROFILE: ['gcc5-armv8']
      EPM_SCHEME: ['shared', 'static']

    # =========================================
    # gcc7-armv8 armv8 build
    # =========================================
zlib:gcc7-armv8@build:
  stage: build
  tags:
  - Linux
  - builder
  - docker
  - workbench:oss-0.2
  image: 172.16.0.119:8482/edgetoolkit/gcc7-armv8
  artifacts:
    paths:
    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
    - zlib/.epm
  script:
  - cd zlib
  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME
  parallel:
    matrix:
    - EPM_PROFILE: ['gcc7-armv8']
      EPM_SCHEME: ['shared', 'static']

    # =========================================
    # gcc7-armv7 armv7 build
    # =========================================
zlib:gcc7-armv7@build:
  stage: build
  tags:
  - Linux
  - builder
  - docker
  - workbench:oss-0.2
  image: 172.16.0.119:8482/edgetoolkit/gcc7-armv7
  artifacts:
    paths:
    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
    - zlib/.epm
  script:
  - cd zlib
  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME
  parallel:
    matrix:
    - EPM_PROFILE: ['gcc7-armv7']
      EPM_SCHEME: ['shared', 'static']

    # =========================================
    # gcc5-armv7 armv7 build
    # =========================================
zlib:gcc5-armv7@build:
  stage: build
  tags:
  - Linux
  - builder
  - docker
  - workbench:oss-0.2
  image: 172.16.0.119:8482/edgetoolkit/gcc5-armv7
  artifacts:
    paths:
    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
    - zlib/.epm
  script:
  - cd zlib
  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME
  parallel:
    matrix:
    - EPM_PROFILE: ['gcc5-armv7']
      EPM_SCHEME: ['shared', 'static']

    # =========================================
    # gcc6-armv7 armv7 build
    # =========================================
zlib:gcc6-armv7@build:
  stage: build
  tags:
  - Linux
  - builder
  - docker
  - workbench:oss-0.2
  image: 172.16.0.119:8482/edgetoolkit/gcc6-armv7
  artifacts:
    paths:
    - zlib/.conan/$EPM_PROFILE/$EPM_SCHEME
    - zlib/.epm
  script:
  - cd zlib
  - epm create --archive .conan/$EPM_PROFILE/$EPM_SCHEME
  parallel:
    matrix:
    - EPM_PROFILE: ['gcc6-armv7']
      EPM_SCHEME: ['shared', 'static']

    # =================================
    # MSVC test
    # =================================
zlib:MSVC@test:
  stage: test
  tags:
  - Windows
  - runner
  - workbench:oss-0.2
  dependencies:
  - zlib:MSVC@build
  script: |
    cd zlib
    $EPM_SANDBOX_STORAGE = ".conan/$EPM_PROFILE/$EPM_SCHEME" 
        
    .epm/$EPM_PROFILE@$EPM_SCHEME/sandbox/test_package
    
  parallel:
    matrix:
    - EPM_PROFILE: ['vs2019d', 'vs2019']
      EPM_SCHEME: ['shared', 'static']




    # =========================================
    # gcc6 x86_64 test
    # =========================================
zlib:gcc6@test:
  stage: test
  tags:
  - Linux
  - runner
  - docker
  - workbench:oss-0.2
  image: edgetoolkit/ubuntu:xenial
  dependencies:
  - zlib:gcc6@build
  script:
    cd zlib
    export EPM_SANDBOX_STORAGE = ".conan/$EPM_PROFILE/$EPM_SCHEME"    
        
    .epm/$EPM_PROFILE@$EPM_SCHEME/sandbox/test_package
    
    
  parallel:
    matrix:
    - EPM_PROFILE: ['gcc6d', 'gcc6']
      EPM_SCHEME: ['shared', 'static']


    # =========================================
    # gcc7 x86_64 test
    # =========================================
zlib:gcc7@test:
  stage: test
  tags:
  - Linux
  - runner
  - docker
  - workbench:oss-0.2
  image: edgetoolkit/ubuntu:xenial
  dependencies:
  - zlib:gcc7@build
  script:
    cd zlib
    export EPM_SANDBOX_STORAGE = ".conan/$EPM_PROFILE/$EPM_SCHEME"    
        
    .epm/$EPM_PROFILE@$EPM_SCHEME/sandbox/test_package
    
    
  parallel:
    matrix:
    - EPM_PROFILE: ['gcc7d', 'gcc7']
      EPM_SCHEME: ['shared', 'static']


    # =========================================
    # gcc5 x86_64 test
    # =========================================
zlib:gcc5@test:
  stage: test
  tags:
  - Linux
  - runner
  - docker
  - workbench:oss-0.2
  image: edgetoolkit/ubuntu:xenial
  dependencies:
  - zlib:gcc5@build
  script:
    cd zlib
    export EPM_SANDBOX_STORAGE = ".conan/$EPM_PROFILE/$EPM_SCHEME"    
        
    .epm/$EPM_PROFILE@$EPM_SCHEME/sandbox/test_package
    
    
  parallel:
    matrix:
    - EPM_PROFILE: ['gcc5', 'gcc5d']
      EPM_SCHEME: ['shared', 'static']











    # =================================
    # Deploy to conan repo
    # =================================
zlib@deploy:
  stage: deploy
  tags:
  - conan
  - deployer
  - workbench:oss-0.2
  dependencies:
  - zlib:gcc6-armv8@build
  - zlib:gcc6@build
  - zlib:MSVC@build
  - zlib:gcc7@build
  - zlib:gcc5@build
  - zlib:gcc5-armv8@build
  - zlib:gcc7-armv8@build
  - zlib:gcc7-armv7@build
  - zlib:gcc5-armv7@build
  - zlib:gcc6-armv7@build
  script: |
    set -e
    cd zlib
    PROFILES=(
      gcc6-armv8
      gcc6d gcc6
      vs2019d vs2019
      gcc7d gcc7
      gcc5 gcc5d
      gcc5-armv8
      gcc7-armv8
      gcc7-armv7
      gcc5-armv7
      gcc6-armv7
    )

    for profile in $PROFILES
    do
      for scheme in shared static
      do
        export EPM_PROFILE=$profile
        export EPM_FPROFILE=$scheme
        echo [zlib] - Upload...  $profile $shcme
        epm upload --storage .conan/$profile/$scheme
      done
    done 