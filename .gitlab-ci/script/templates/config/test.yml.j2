
{%- if 'MSVC' in CTree -%}
{%- if package.config.test and 'Windows' in package.config.test -%}
{%- set script = package.config.test['Windows'] -%}
{%- endif -%}
{% set matrix = CTree | cmatrix('MSVC') %}
    # =================================
    # MSVC test
    # =================================
{{uname| default(package.name, true)}}:MSVC@test:
  stage: test
  tags:
  - Windows
  - runner
  - workbench:{{synthesis.config.workbench | default('oss-{}'.format(synthesis.version), true) }}
  dependencies:
  - {{package.name}}:MSVC@build
  script:
  - cd {{package.name}}
  - $env:EPM_SANDBOX_STORAGE=".conan\$EPM_PROFILE\$EPM_SCHEME" 
{%- for i in script %}        
  - {{i}}
{% endfor %}
  parallel:
    matrix:
    - EPM_PROFILE: {{ matrix.profile | list }}
      EPM_SCHEME: {{ matrix.scheme | list }}
{%- endif -%}



{%- for name, config in CTree.items() -%}
{%- if name !=  'MSVC' %}
{%- set matrix = CTree | cmatrix(name) -%}
{%- if package.config.test and 'Linux' in package.config.test -%}
{%- set script = package.config.test['Linux'] -%}
{%- endif -%}
{% if matrix.image and script %}
    # =========================================
    # {{name}} {{matrix.arch}} test
    # =========================================   
{{uname| default(package.name, true)}}:{{name}}@test:
  stage: test
  tags:
  - {{"Linux/aarch64" if matrix.arch == "armv8" else "Linux"}}
  - runner
  - docker
  - workbench:{{synthesis.config.workbench | default('oss-{}'.format(synthesis.version), true) }}
  image: {{matrix.image}}
  dependencies:
  - {{package.name}}:{{name}}@build
  script:
  - cd {{package.name}}
  - export EPM_SANDBOX_STORAGE=".conan/$EPM_PROFILE/$EPM_SCHEME"    
{%- for i in script %}        
  - {{i}}
{% endfor %}
  parallel:
    matrix:
    - EPM_PROFILE: {{ matrix.profile | list }}
      EPM_SCHEME: {{ matrix.scheme | list }}
{%- endif -%}
{%- endif -%}
{%- endfor -%}

