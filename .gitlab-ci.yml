stages:
#  - startup
#  - init
- build
- test
- deploy

#startup:
#  stage: startup
#  tags:
#    - gitlab-ci.config.generator
#  script:
#    - pip install networkx python-gitlab
#    - .toolkit/bin/gitlab-ci generate
#  artifacts:
#    paths:
#      - .gitlab-ci/.cache/trigger.yml
#init:
#  stage: init
#  trigger:
#    include:
#      - artifact: .gitlab-ci/.cache/trigger.yml
#        job: startup
#    strategy: depend
#####################################


build.Linux:
  stage: build
  tags:
    - Linux
    - '@oss-0.1'
    - builder
  parallel:
    matrix:
      - PROFILE: [gcc5, gcc5d]
        SCHEME: [static, shared]
  artifacts:
    paths:
    - zlib/.conan/$PROFILE/$SCHEME
    - zlib/.epm
  script:    
    - cd zlib
    - epm --profile gcc5 create --archive .conan/$PROFILE/$SCHEME

test.Linux:
  stage: build
  tags:
    - Linux
    - '@oss-0.1'
    - runner
  parallel:
    matrix:
      - PROFILE: [gcc5, gcc5d]
        SCHEME: [static, shared]
  dependencies:
    - build.Linux
  script:    
    - cd zlib
    - epm --profile gcc5 --storage .conan/$PROFILE/$SCHEME download --reference .conan
    - epm --profile gcc5 --storage .conan/$PROFILE/$SCHEME exec test_package


deploy.Linux:
  stage: deploy
  tags:
    - deployer
    - '@oss-0.1'
  dependencies:
    - build.Win
  script:
    - cd zlib
    - epm --profile vs2019 --storage .conan/$PROFILE/$SCHEME upload 

#
#
#build.Win:
#  stage: build
#  tags:
#    - Windows
#    - '@oss-0.1'
#    - builder
#  artifacts:
#    paths:
#    - zlib/.conan
#    - zlib/.epm
#
#  script:   
#    - cd zlib
#    - epm --profile vs2019 create --archive .conan
#
#
#
#build.Linux:
#  stage: build
#  tags:
#    - Linux
#    - '@oss-0.1'
#    - builder
#  artifacts:
#    paths:
#    - zlib/.conan
#    - zlib/.epm
#  script:    
#    - cd zlib
#    - epm --profile gcc5 create --archive .conan
#build.Win:
#  stage: build
#  tags:
#    - Windows
#    - '@oss-0.1'
#    - builder
#  artifacts:
#    paths:
#    - zlib/.conan
#    - zlib/.epm
#
#  script:   
#    - cd zlib
#    - epm --profile vs2019 create --archive .conan
#
#
#test.Linux:
#  stage: test
#  tags:
#    - Linux
#    - '@oss-0.1'
#    - runner
#  dependencies:
#    - build.Linux
#  script:    
#    - cd zlib
#    - epm --profile gcc5 --storage .conan download --reference .conan
#    - epm --profile gcc5 --storage .conan exec test_package
#test.Win:
#  stage: test
#  tags:
#    - Windows
#    - '@oss-0.1'
#    - runner
#  dependencies:
#    - build.Win
#
#  script:   
#    - cd zlib
#    - epm --profile vs2019 --storage .conan download  --reference .conan
#    - epm --profile vs2019 --storage .conan exec test_package
#    
#
#deployer:
#  stage: deploy
#  tags:
#    - deployer
#    - '@oss-0.1'
#  dependencies:
#    - build.Win
#  script:
#    - cd zlib
#    - epm --profile vs2019 --storage .conan upload 
#
#
#deployer2:
#  stage: deploy
#  tags:
#    - deployer
#    - '@oss-0.1'
#  dependencies:
#    - build.Linux
#  script:
#    - cd zlib
#    - epm --profile gcc5 --storage .conan upload
